//============================================================================
// Name        : TestSDSSocketDemo.cpp
// Author      : pix
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C, Ansi-style
//============================================================================

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "CSocketProtocol.h"
#include "CSckFactoryImpl1.h"
#include "CSckFactoryImpl2.h"
#include "CEncDesProtocol.h"
#include "CHwEncDesImpl.h"

// 模拟调用,面向抽象类编程框架
int SckSendAndRecv(CSocketProtocol * sp,unsigned char * in, int inlen,unsigned char * out,int * outlen)
{
	int ret = 0;
	ret = sp->SocketInit();
	if(0 != ret)
	{
		goto END;
	}
	ret = sp->SocketSend(in,inlen);
	if(0 != ret)
		{
			goto END;
		}
	ret = sp->SocketRecv(out,outlen);
	if(0 != ret)
		{
			goto END;
		}

END:
	ret = sp->SocketDestory();
	return ret;
}

// 模拟调用,面向抽象类编程框架 ---带加解密
int SckSendAndRecv_EncDes(CSocketProtocol * sp,CEncDesProtocol * edp,unsigned char * in, int inlen,unsigned char * out,int * outlen)
{
	int ret = 0;
	unsigned char data[4096];
	int datalen = 0;
	ret = sp->SocketInit();
	if(0 != ret)
	{
		printf("FUNC SocketInit(),ERROR,ret:%d\n",ret);
		goto END;
	}
	ret = edp->EncData(in, inlen, data, &datalen);
	if(0 != ret) {
		printf("FUNC EncData(),ERROR,ret:%d\n",ret);
		goto END;
	}
	ret = sp->SocketSend(data,datalen);
	if(0 != ret)
	{
		printf("FUNC SocketSend(),ERROR,ret:%d\n",ret);
		goto END;
	}
	ret = sp->SocketRecv(data,&datalen);
	if(0 != ret)
	{
		printf("FUNC SocketRecv(),ERROR,ret:%d\n",ret);
		goto END;
	}
	ret = edp->DesData(data, datalen, out, outlen);
	if(0 != ret)
	{
		printf("FUNC DesData(),ERROR,ret:%d\n",ret);
		goto END;
	}

END:
	ret = sp->SocketDestory();
	return ret;
}

int main(void) {
	int ret = 0;
	CSocketProtocol * sp = NULL;
	CEncDesProtocol * edp = NULL;
//	sp = new CSckFactoryImpl1;
	sp = new CSckFactoryImpl2;
	edp = new CHwEncDesImpl;

	unsigned char inBuf [4096] = {0};
	unsigned char outBuf [4096] = {0};
	int outLen = 0;
	int inLen = 9;
	strcpy((char*)inBuf,"HelloWorld");

	ret = SckSendAndRecv_EncDes(sp,edp,inBuf,inLen,outBuf,&outLen);
	if(0 != ret)
	{
		printf("FUNC SckSendAndRecv(),Error,ret:%d\n",ret);
	}
	if(NULL != sp)
	{
		delete sp;	// 如果使用父类指针释放子类内存，应该用虚析构函数
		sp = NULL;
	}
	printf("outBuf:%s\n",outBuf);
	return ret;
}
